<chapter id="syntax">
	<title>Configuration file syntax</title>

<!-- Introduction -->
<para>Ctrlproxy uses a XML as it's RC file. The syntax of XML 
files is described much better in other documents on the web and 
is beyond the scope of this document.</para>

<para>Take a look at the <filename>ctrlproxyrc.example</filename> file that 
is distributed with ctrlproxy. It should give you a good impression of what 
a ctrlproxyrc file is supposed to look like.</para>

<para>The root element contains 2 elements: plugins and networks. These are discssed below.</para>

<sect1><title>Plugins</title>

	<para>Contains various &lt;plugin&gt; elements, which 
	each represent a plugin that can be loaded. When the 
	autoload attribute is set, the plugin will be loaded 
	when ctrlproxy starts. </para>

	<para>The <constant>file</constant> attribute is required and 
	should specify either an absolute path to a plugin or the name of a 
	plugin in the default modules dir (something like <filename>/usr/lib/ctrlproxy</filename>).</para>

	<para>The &lt;plugin&gt; element should contain plugin-specific elements. See the documentation for the individual plugins for details.</para>
</sect1>

<sect1><title>Networks</title>

	<para>The &lt;networks&gt; element contains several &lt;network&gt; 
	elements, each representing an IRC network.</para>

	<para>Attributes that can be specified on a network element are:</para>

	<variablelist>
	<varlistentry><term>name</term>
	<listitem><para>Name of the network. Something like <quote>OPN</quote>,  <quote>OFTC</quote> or <quote>IRCNet</quote>. The name of the first 
	server is used if this is not specified.</para></listitem>
	</varlistentry>

	<varlistentry><term>client_pass</term>
	<listitem><para>Password a client should use to authenticate 
	when it connects. Defaults to empty string, in which case 
	authentication will be disabled.</para></listitem>
	</varlistentry>

	<varlistentry><term>nick</term>
	<listitem><para>Initial nick name to use on this network. Defaults to UNIX user name.</para></listitem>
	</varlistentry>

	<varlistentry><term>username</term>
	<listitem><para>User name to report in hostmask. Defaults to UNIX user name.</para></listitem>
	</varlistentry>

	<varlistentry><term>ignore_first_nickchange</term>
		<listitem><para>IRC clients always send a NICK command to the IRC server 
				after they have connected. Ctrlproxy happily passes this 
				new nick name on to the real server. If you want ctrlproxy 
				to ignore the first nick change that a client sends, 
				add this attribute.</para></listitem>
	</varlistentry>

	<varlistentry><term>fullname</term>
	<listitem><para>Full name to report (for example in <command>/WHOIS</command> information). Defaults to the full name specified in the gecos field of your NSS passwd backend (usually the file <filename>/etc/passwd</filename>.</para></listitem>
	</varlistentry>

	<varlistentry><term>autoconnect</term>
	<listitem><para>Specifies whether to connect to this network at start-up.</para></listitem>
	</varlistentry>

	</variablelist>
	
	<sect2><title>Listeners</title>
	
	<para>
	Clients need to be able to connect to ctrlproxy. This is done using so-called 'listeners'. The element &lt;listen&gt; can contain several 
	elements from transports that ctrlproxy should listen on.</para>

	<para>
	For a description of the configuration of the various avaiable 
	transports that can be used for listening, read their chapter 
	in <link linkend="modules">modules part</link>.
	</para>

	<para>Example:</para>

	<programlisting>
	<![CDATA[
	<ctrlproxy>
		<plugins>
			<plugin autoload="1" file="socket"/>
		</plugins>
		<networks>
			<network name="OPN" autoconnect="1">
				<listen>
					<ipv4 port="6667"/>
				</listen>
			</network>
		</networks>
	</ctrlproxy>
	]]>
	</programlisting>
	</sect2>

	<sect2><title>Channels</title>
	
		<para>A &lt;network&gt; element can also contain 
		several &lt;channel&gt; elements. Each channel 
		should have a <quote>name</quote> attribute which 
		should contain the name of the channel.</para>

		<para>The <quote>autojoin</quote> attribute is voluntary 
		and specifies whether the channel should be joined automatically
		when ctrlproxy connects to the network. </para>

		<para>Example:</para>

		<programlisting>
		<![CDATA[
		<ctrlproxy>
			<networks>
				<network name="OPN">
					<channel name="#samba"/>
					<channel name="#samba-technical" autojoin="1"/>
				</network>
			</networks>
		</ctrlproxy>
		]]>
		</programlisting>
	</sect2>
	
	<sect2><title>Servers</title>
	
	<para>Similar to the &lt;listen&gt; element is the 
	&lt;servers&gt; element. It contains possible transport configuration 
	that is used to connect to the network.</para>

	<para>Note that ctrlproxy always only connects to exactly <emphasis>one</emphasis> server at once. It starts by connecting to the first server and tries the others in the list if that one fails.</para>

	<para>Again, see the documentation for the specific transport 
	plugins for details.</para>

	<para>Example:</para>

	<programlisting>
	<![CDATA[
	<ctrlproxy>
		<plugins>
			<plugin autoload="1" file="socket"/>
		</plugins>
		<networks>
			<network name="OPN" autoconnect="1">
				<servers>
					<ipv4 host="irc.freenode.net"/>
					<ipv6 host="irc.ipv6.freenode.net"/>
					<ipv4 host="irc.nl.linux.org"/>
				</servers>
			</network>
		</networks>
	</ctrlproxy>
	]]>
	</programlisting>

	</sect2>

	<sect2><title>Autosend</title>
	<para>A network element can contain one or more &lt;autosend&gt;
	elements. These should contain raw IRC commands that are sent 
	to the server after ctrlproxy has connected to it.</para>

	<para>Example</para>

	<programlisting>
	<![CDATA[
	<ctrlproxy>
		<networks>
			<network name="OPN">
				<autosend>PRIVMSG nickserv :identify mysecretpassword</autosend>
				<autosend>PRIVMSG ctrlsoft :Hi! I'm using ctrlproxy!</autosend>
			</network>
		</networks>
	</ctrlproxy>
	]]>
	</programlisting>
	</sect2>

</sect1>

</chapter>
